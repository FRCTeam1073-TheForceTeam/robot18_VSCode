package org.usfirst.frc1073.robot18.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc1073.robot18.Robot;

import edu.wpi.first.networktables.NetworkTable;
import edu.wpi.first.networktables.NetworkTableEntry;
import edu.wpi.first.networktables.NetworkTableInstance;

/**
 *
 */
public class NetworkTableTest extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    
	//Set up for the NetworkTable variables the Raspberry Pi sends
	NetworkTable netTable = null;
	NetworkTableInstance netTableInst;
    double xDelta;
    double xWidth;
    double zero = 0.0;
    
    
    //Variable for button used in isFinished
    boolean isPressed = false;
    
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public NetworkTableTest() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
    	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        //requires(Robot.driveTrain);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        
        //Sets the correct Network Table to pull from the Pixy
    	netTableInst = NetworkTableInstance.getDefault();
        netTable = netTableInst.getTable("Test");
        if (netTable == null)
        	SmartDashboard.putString("NetworkTableTest", " Init failed, netTable is null");
        else
        	SmartDashboard.putString("NetworkTableTest", " Init succeeded");
        	
    }

    protected void initialize() {
    	xDelta = -1;
    	netTableInst.deleteAllEntries();
    	SmartDashboard.putNumber("xDelta", xDelta);
    	//SmartDashboard.putString("done?", "no");

    	//Robot.bling.sendPegTargeting();
    }

    protected void execute() {
    	
		xDelta = (double) netTable.getEntry("dsTime").getNumber(0);
		SmartDashboard.putNumber("xDelta", xDelta);
		netTable.getEntry("robotTime").setNumber(xDelta);
        //xWidth =  netTable.getNumber("AverageWidth", 0);
        
       
    }
    
    protected boolean isFinished() {
 
    	Boolean stopBool;
    	double finishVar = xDelta;
    	
    	
    	if (finishVar > 20){
    		stopBool = true;
    		SmartDashboard.putString("NetworkTableTest", " Finished");
    	}
    	else {
    		stopBool = false;
    	}
    	
    	//Stops the robot if:
    	/*
    	 * Change this to affect how close the robot gets. Bigger means closer and smaller means farther.
    	 * 27 should be ok to start.
    	 * 			|
    	 * 			|
    	 * 			|
    	 *			|
    	 *		   \ /
    	 */
    	return stopBool;
    	
    }
    
    protected void end() {
 
    }

    protected void interrupted() {
   
    }
}
